#!/usr/bin/env nextflow
/*
----------------------------------------------------------------------------------------
File    :   nextflow.config
Author  :   Lei Zheng
Version :   1.0
Contact :   type.zheng@gmail.com
Github  :   https://github.com/typekey
Description :   The main configuration file for the mircorRNA-PARIS pipeline
----------------------------------------------------------------------------------------
*/


// Default config options for all compute environments
// Global default params, used in configs
params {
    bin                        = "${projectDir}/bin"
    // Input options
    input                      = null
    pool_table                 = null
    mirna_table                = null

    // References
    genome                     = null
    fastq_screen_conf          = "/data/user/leizheng/reference/db/fastq_screen/fastq_screen.conf"
    skip_fastq_screen          = false
    map_reads                  = "both" // R1, R2, both
    map_target                 = "gene" // gene, repeat, both
    cluster_reads_cut          = 10
    extract_mismatch           = 0
    is_pooled                  = true
    splicesites                = null
    gtf_extra_attributes       = 'gene_name'
    chrom_norm                 = "${projectDir}/modules/nf-core/samtools/filter_norm/norm_chrom/hg38.chromNorm"
    gtf_group_features         = 'gene_id'
    skip_gtf_filter            = false
    skip_gtf_transcript_filter = false
    featurecounts_feature_type = 'exon'
    featurecounts_group_type   = 'gene_biotype'
    gencode                    = false
    save_reference             = false
    igenomes_base              = 's3://ngi-igenomes/igenomes'
    igenomes_ignore            = false
    transcript_fasta           = null
    gff                        = null
    additional_fasta           = null
    gene_bed                   = null
    rsem_index                 = null
    salmon_index               = null
    kallisto_index             = null
    hisat2_index               = null
    bbsplit_index              = null

    // UMI handling
    with_umi                   = true
    skip_umi_extract           = false
    umitools_extract_method    = 'regex'
    umitools_grouping_method   = 'directional'
    umitools_dedup_stats       = false
    umitools_bc_pattern        = null
    umitools_bc_pattern2       = ".+(?P<umi_1>.{5})(?P<discard_1>GATCGTCGGACTGTAGAACTCTGAAC.+){s<=2}"
    umitools_umi_separator     = null
    umi_discard_read           = null
    save_umi_intermeds         = false

    // Trimming
    cutadapt_params            = "-a AGATCGGAAGAGC"
    trimmer                    = 'cutadapt'
    min_trimmed_reads          = 10
    extra_trimgalore_args      = ''
    extra_fastp_args           = null
    save_trimmed               = false
    skip_trimming              = false

    // BBSplit genome filtering
    bbsplit_fasta_list         = "contamination.fa"
    save_bbsplit_reads         = true
    skip_bbsplit               = true

    // Ribosomal RNA removal
    remove_ribo_rna            = false
    save_non_ribo_reads        = false
    ribo_database_manifest     = "${projectDir}/assets/rrna-db-defaults.txt"

    // Alignment
    aligner                    = 'star'
    pseudo_aligner             = null
    pseudo_aligner_kmer_size   = 31
    seq_center                 = null
    bam_csi_index              = false
    star_ignore_sjdbgtf        = false
    salmon_quant_libtype       = null
    hisat2_build_memory        = '200.GB'  // Amount of memory required to build HISAT2 index with splice sites
    stringtie_ignore_gtf       = false
    min_mapped_reads           = 5
    extra_star_align_args      = null
    extra_salmon_quant_args    = null
    extra_kallisto_quant_args  = null
    kallisto_quant_fraglen     = 200
    kallisto_quant_fraglen_sd  = 200
    save_merged_fastq          = false
    save_unaligned             = false
    save_align_intermeds       = false

    // Mark duplicates
    skip_markduplicates        = false
    skip_alignment             = false
    skip_pseudo_alignment      = false
    duplication_mode           = 'remove' // markdup, remove

    // calling peaks
    skip_macs3                 = false
    fragment_size              = null
    read_length                = null
    with_control               = false
    keep_dup                   = 5
    narrow_peak                = false
    effective_genome           = 2913022398
    macs3_pvalue               = null
    macs3_fdr                  = 0.05
    broad_cutoff               = 0.1
    save_macs_pileup           = false
    skip_peak_qc               = false
    skip_peak_annotation       = false
    skip_consensus_peaks       = false

    // motif
    skip_motif                 = false
    homer_motif_length         = 8

    // QC
    skip_qc                    = false
    skip_bigwig                = false
    skip_stringtie             = false
    skip_fastqc                = false
    skip_preseq                = true
    skip_dupradar              = false
    skip_qualimap              = false
    skip_rseqc                 = false
    skip_biotype_qc            = false
    skip_deseq2_qc             = false
    skip_multiqc               = false
    deseq2_vst                 = true
    rseqc_modules              = 'bam_stat,inner_distance,infer_experiment,junction_annotation,junction_saturation,read_distribution,read_duplication'

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                     = null
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

    // Schema validation default options
    validationFailUnrecognisedParams = false
    validationLenientMode            = false
    validationSchemaIgnoreParams     = 'genomes,igenomes_base'
    validationShowHiddenParams       = false
    validate_params                  = true

    reference {
        GRCh38_ucsc {
            fasta = 'hg38.fa'
            gtf = 'annotation.gtf'
            bed = 'annotation.bed'
            bowtie = 'bowtie/genome/genome'
            bowtie2 = 'bowtie2/genome/genome'
            star = 'star/genome'
            bwa = 'bwa/genome'
            snp = 'hg38_dbsnp151.bed'
            chromsizes = 'hg38_chromsizes.tsv'

            sRNA {
                fasta = 'hg38_sRNA.fa'
                bowtie2 = 'bowtie2/sRNA/sRNA'
                bed = 'hg38_sRNA.bed'
            }

            tRNA {
                fasta = 'hg38_tRNA.fa'
                bowtie2 = 'bowtie2/tRNA/tRNA'
                bed = 'hg38_tRNA.bed'
            }

            snomiRNA {
                fasta = 'hg38_snomiRNA.fa'
                bowtie2 = 'bowtie2/snomiRNA/snomiRNA'
                bed = 'hg38_snomiRNA.bed'
            }

            // robosomal RNA
            rRNA {
                fasta = 'GRCh38.rRNA.fasta'
                bowtie2 = 'bowtie2/GRCh38.rRNA'
                repeatmasker = 'hg38_rRNA_repeat.bed'
            }

            contamination {
                fasta = "contamination.fa"
                bowtie2 = "bowtie2/contamination"
            }
        }
        GRCh38_gencode {
            fasta = "GRCh38.genome.ercc.fa"
            chrom_fasta = "chromosomes"
            omniclip_db = "gencode.v45.annotation.db"
            bowtie2 = "bowtie2/GRCh38.genome.ercc"
            twobit = "2bit/hg38.2bit"

            rRNA28S {
               bed = "/home/leizheng/data/reference/Homo_sapiens/NCBI/GRCh38/Annotation/rRNA28s.bed"
               slim_bed = "/home/leizheng/data/reference/Homo_sapiens/NCBI/GRCh38/Annotation/rRNA28s.slim.bed"
            }

            // small RNA
            sRNA {
                bowtie2=''
            }

            genes {
                fasta = "Homo_sapiens.GRCh38.sncRNA.fa"
                hisat3n = "Homo_sapiens.GRCh38.sncRNA"
            }
            contamination {
                fasta = "contamination.fa"
                hisat3n = "contamination"
            }
        }
    }

    // publish path
    publish_dir_mode = 'copy'

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup                = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    docker {
        docker.enabled         = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
        docker.runOptions      = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions      = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    podman {
        podman.enabled         = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    shifter {
        shifter.enabled        = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    charliecloud {
        charliecloud.enabled   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        apptainer.enabled      = false
    }
    apptainer {
        apptainer.enabled      = true
        apptainer.autoMounts   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 4
        executor.memory        = 8.GB
    }
}

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
docker.registry      = 'quay.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

// Nextflow plugins
plugins {
    id 'nf-validation@1.1.3' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'microRNA-PARIS'
    version         = '0.0.3'
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
